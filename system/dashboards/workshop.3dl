<TabSet>

  <Tab title="Viral Load Cascade">
      <Dashboard>
          <Grid>
              <Dataset query="SELECT 'May 27, 24 - Jun 02, 24' AS week_dates, 'Bariadi Town Council Hospital' AS facility_name">
                  <Row columns="2" smallColumns="1">
                      <Header>
                          <DataString>%facility_name%</DataString>
                      </Header>
                      <Subheader>
                          <DataString>Data for week of: %week_dates%</DataString>
                      </Subheader>
                  </Row>
              </Dataset>

              <Filters>
                  <Filter caption="Reporting Week" name="week" values_query={`SELECT DISTINCT weekly_start_monday_day_dates AS label, weekly_start_monday_end_date AS value FROM derived.dim_date ORDER BY weekly_start_monday_end_date DESC;`}/>
              </Filters>
              <Row columns="1">
                  <Dataset query="">
                    <CascadeChart
                      header="Viral Load Testing Cascade"
                      subHeader="Visual representation of HIV case identification metrics."
                      cascadeObject={{
                        id: "1",
                        data: {
                          label: "Clients eligible for viral load testing",
                          query:
                            "SELECT report_date AS [Report Date], f.gender AS Sex, current_age AS Age, v.viral_load_test_date AS [VL Test Date], viral_load_test_result_numeric AS [VL Result], v.viral_load_test_result_text AS [Result Text], v.next_viral_load_test_date AS [Next VL Date], clients_eligible_for_viral_load_testing AS [Eligible for VL], has_visited AS [Attended] FROM derived.fact_ctc_daily_client_status f INNER JOIN derived.dim_client c ON f.client_id = c.client_id INNER JOIN derived.dim_date d ON f.report_date = d.[date] INNER JOIN derived.fact_viral_load_test v ON f.client_id = v.client_id AND v.viral_load_test_date = ( SELECT MAX(viral_load_test_date) FROM derived.fact_viral_load_test v WHERE v.viral_load_test_date <= f.report_date AND v.client_id = f.client_id ) WHERE clients_eligible_for_viral_load_testing = 1 AND weekly_start_monday_end_date = '2024-06-02' ORDER BY f.report_date",
                        },
                        options: {
                            nodeBGColorHover: "#007bff",
                            borderColorHover: "#0056b3",
                            nodeBGColor: "#d1ecf1",
                        },
                        children: [
                          {
                              id: "11",
                              data: {
                                  label: "Clients eligible for VL with no documented sample taken",
                                  query:
                                  "SELECT report_date AS [Report Date], f.gender AS Sex, current_age AS Age, v.viral_load_test_date AS [VL Test Date], viral_load_test_result_numeric AS [VL Result], v.viral_load_test_result_text AS [Result Text], v.next_viral_load_test_date AS [Next VL Date], clients_eligible_for_viral_load_testing_with_sample_not_taken AS [Eligible for VL], has_visited AS [Attended] FROM derived.fact_ctc_daily_client_status f INNER JOIN derived.dim_client c ON f.client_id = c.client_id INNER JOIN derived.dim_date d ON f.report_date = d.[date] INNER JOIN derived.fact_viral_load_test v ON f.client_id = v.client_id AND v.viral_load_test_date = ( SELECT MAX(viral_load_test_date) FROM derived.fact_viral_load_test v WHERE v.viral_load_test_date <= f.report_date AND v.client_id = f.client_id ) WHERE clients_eligible_for_viral_load_testing_with_sample_not_taken = 1 AND weekly_start_monday_end_date = '2024-06-02' ORDER BY f.report_date;",
                              },
                              options: {
                                  nodeBGColorHover: "#FF4C6A",
                                  borderColorHover: "#FF3E5E",
                                  nodeBGColor: "#FAA6BD",
                              },
                              children: [
                              {
                                  id: "111",
                                  data: {
                                      label: "Clients eligible for VL and attended with no sample taken",
                                      query:
                                      "SELECT report_date AS [Report Date], f.gender AS Sex, current_age AS Age, v.viral_load_test_date AS [VL Test Date], viral_load_test_result_numeric AS [VL Result], v.viral_load_test_result_text AS [Result Text], v.next_viral_load_test_date AS [Next VL Date], clients_eligible_for_viral_load_testing_attend_clinic_sample_not_taken AS [Eligible for VL], has_visited AS [Attended] FROM derived.fact_ctc_daily_client_status f INNER JOIN derived.dim_client c ON f.client_id = c.client_id INNER JOIN derived.dim_date d ON f.report_date = d.[date] INNER JOIN derived.fact_viral_load_test v ON f.client_id = v.client_id AND v.viral_load_test_date = ( SELECT MAX(viral_load_test_date) FROM derived.fact_viral_load_test v WHERE v.viral_load_test_date <= f.report_date AND v.client_id = f.client_id ) WHERE clients_eligible_for_viral_load_testing_attend_clinic_sample_not_taken = 1 AND weekly_start_monday_end_date = '2024-06-02' ORDER BY f.report_date",
                                  },
                                  options: {
                                      nodeBGColorHover: "#d92a3e",
                                      borderColorHover: "#b71c28",
                                      nodeBGColor: "#f8a3a8",
                                  },
                              },
                              {
                                  id: "112",
                                  data: {
                                      label: "Clients eligible for VL, not attended and no sample taken",
                                      query:
                                      "SELECT report_date AS [Report Date], f.gender AS Sex, current_age AS Age, v.viral_load_test_date AS [VL Test Date], viral_load_test_result_numeric AS [VL Result], v.viral_load_test_result_text AS [Result Text], v.next_viral_load_test_date AS [Next VL Date], clients_eligible_for_viral_load_testing_not_attend_clinic_sample_not_taken AS [Eligible for VL], has_visited AS [Attended] FROM derived.fact_ctc_daily_client_status f INNER JOIN derived.dim_client c ON f.client_id = c.client_id INNER JOIN derived.dim_date d ON f.report_date = d.[date] INNER JOIN derived.fact_viral_load_test v ON f.client_id = v.client_id AND v.viral_load_test_date = ( SELECT MAX(viral_load_test_date) FROM derived.fact_viral_load_test v WHERE v.viral_load_test_date <= f.report_date AND v.client_id = f.client_id ) WHERE clients_eligible_for_viral_load_testing_not_attend_clinic_sample_not_taken = 1 AND weekly_start_monday_end_date = '2024-06-02' ORDER BY f.report_date;",
                                  },
                                  options: {
                                      nodeBGColorHover: "#FF6F3C",
                                      borderColorHover: "#FF4F2A",
                                      nodeBGColor: "#FFB3A0",
                                  },
                              },
                              ],
                          },
                          {
                              id: "12",
                              data: {
                                  label: "Clients eligible for VL with documented sample taken",
                                  query:
                                  "SELECT report_date AS [Report Date], f.gender AS Sex, current_age AS Age, v.viral_load_test_date AS [VL Test Date], viral_load_test_result_numeric AS [VL Result], v.viral_load_test_result_text AS [Result Text], v.next_viral_load_test_date AS [Next VL Date], clients_eligible_for_viral_load_testing_with_documented_sample_taken AS [Eligible for VL], has_visited AS [Attended] FROM derived.fact_ctc_daily_client_status f INNER JOIN derived.dim_client c ON f.client_id = c.client_id INNER JOIN derived.dim_date d ON f.report_date = d.[date] INNER JOIN derived.fact_viral_load_test v ON f.client_id = v.client_id AND v.viral_load_test_date = ( SELECT MAX(viral_load_test_date) FROM derived.fact_viral_load_test v WHERE v.viral_load_test_date <= f.report_date AND v.client_id = f.client_id ) WHERE clients_eligible_for_viral_load_testing_with_documented_sample_taken = 1 AND weekly_start_monday_end_date = '2024-06-02' ORDER BY f.report_date",
                              },
                              options: {
                                  nodeBGColorHover: "#28a745",
                                  borderColorHover: "#218838",
                                  nodeBGColor: "#c3e6cb",
                            },
                          },
                          {
                              id: "13",
                              data: {
                                  label: "Cumulative clients eligible for viral load testing",
                                  query:
                                  "SELECT report_date AS [Report Date], f.gender AS Sex, current_age AS Age, v.viral_load_test_date AS [VL Test Date], viral_load_test_result_numeric AS [VL Result], v.viral_load_test_result_text AS [Result Text], v.next_viral_load_test_date AS [Next VL Date], is_clients_eligible_for_viral_load_testing AS [Eligible for VL], has_visited AS [Attended] FROM derived.fact_ctc_daily_client_status f INNER JOIN derived.dim_client c ON f.client_id = c.client_id INNER JOIN derived.dim_date d ON f.report_date = d.[date] INNER JOIN derived.fact_viral_load_test v ON f.client_id = v.client_id AND v.viral_load_test_date = ( SELECT MAX(viral_load_test_date) FROM derived.fact_viral_load_test v WHERE v.viral_load_test_date <= f.report_date AND v.client_id = f.client_id ) WHERE is_clients_eligible_for_viral_load_testing = 1 AND weekly_start_monday_end_date = '2024-06-02' ORDER BY f.report_date",
                              },
                              options: {
                                  nodeBGColorHover: "#28a745",
                                  borderColorHover: "#218838",
                                  nodeBGColor: "#c3e6cb",
                            },
                          },
                        ],
                      }}
                    />
                  </Dataset>
                </Row>
          </Grid>
      </Dashboard>
  </Tab>

  <Tab title="Viral Load Testing Table">
      <Dashboard>
          <Grid>
              <Row>
                  <Header>Viral Load Testing</Header>
              </Row>
              <Filters>
                  <Filter caption="Reporting Week" name="week" values_query={`SELECT DISTINCT weekly_start_monday_day_dates AS label, weekly_start_monday_end_date AS value FROM derived.dim_date ORDER BY weekly_start_monday_end_date DESC;`}/>
              </Filters>

              <Row columns="1" largeColumns="1">
                  <Dataset pageSize='20' searchColumns="hts_age_at_test, hts_sex_code" query={`SELECT report_date AS [Report Date], f.gender AS Sex, current_age AS Age, v.viral_load_test_date AS [VL Test Date], viral_load_test_result_numeric AS [VL Result], v.viral_load_test_result_text AS [Result Text], v.next_viral_load_test_date AS [Next VL Date], is_clients_eligible_for_viral_load_testing AS [Eligible for VL], has_visited AS [Attended] FROM derived.fact_ctc_daily_client_status f INNER JOIN derived.dim_client c ON f.client_id = c.client_id INNER JOIN derived.dim_date d ON f.report_date = d.[date] INNER JOIN derived.fact_viral_load_test v ON f.client_id = v.client_id AND v.viral_load_test_date = ( SELECT MAX(viral_load_test_date) FROM derived.fact_viral_load_test v WHERE v.viral_load_test_date <= f.report_date AND v.client_id = f.client_id ) AND is_clients_eligible_for_viral_load_testing = 1 AND d.weekly_start_monday_end_date = COALESCE(NULLIF('$week', ''), '2024-06-02') ORDER BY f.report_date`}>
                      <InfiniteScrollTable header="HIV Case Identification Table" subHeader="Tabular representation of clients eligigle for viral load testing." variant="plain" searchHint="age, sex" />
                  </Dataset>
              </Row>
          </Grid>
      </Dashboard>
  </Tab>

</TabSet>